<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\ES320F654.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\ES320F654.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue May 05 08:37:07 2020
<BR><P>
<H3>Maximum Stack Usage =         72 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; bsp_init &rArr; SystemClock_Config &rArr; ald_cmu_clock_config &rArr; cmu_clock_update &rArr; ald_tick_init &rArr; SysTick_Config &rArr; __NVIC_SetPriority
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[3d]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[c]">WWDG_IWDG_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">WWDG_IWDG_Handler</a><BR>
 <LI><a href="#[d]">LVD_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">LVD_Handler</a><BR>
 <LI><a href="#[e]">RTC_TSENSE_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">RTC_TSENSE_Handler</a><BR>
 <LI><a href="#[f]">CRYPT_TRNG_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">CRYPT_TRNG_Handler</a><BR>
 <LI><a href="#[12]">EXTI4_7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">EXTI4_7_Handler</a><BR>
 <LI><a href="#[13]">EXTI8_11_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">EXTI8_11_Handler</a><BR>
 <LI><a href="#[14]">EXTI12_15_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">EXTI12_15_Handler</a><BR>
 <LI><a href="#[15]">DMA_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">DMA_Handler</a><BR>
 <LI><a href="#[16]">CAN0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">CAN0_Handler</a><BR>
 <LI><a href="#[17]">LPTIM0_SPI2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">LPTIM0_SPI2_Handler</a><BR>
 <LI><a href="#[18]">ADC_ACMP_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">ADC_ACMP_Handler</a><BR>
 <LI><a href="#[19]">AD16C4T0_BRK_UP_TRIG_COM_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">AD16C4T0_BRK_UP_TRIG_COM_Handler</a><BR>
 <LI><a href="#[1a]">AD16C4T0_CC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">AD16C4T0_CC_Handler</a><BR>
 <LI><a href="#[1b]">BS16T0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">BS16T0_Handler</a><BR>
 <LI><a href="#[1c]">GP16C2T0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">GP16C2T0_Handler</a><BR>
 <LI><a href="#[1d]">GP16C2T1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">GP16C2T1_Handler</a><BR>
 <LI><a href="#[1e]">BS16T1_UART2_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">BS16T1_UART2_Handler</a><BR>
 <LI><a href="#[1f]">BS16T2_UART3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">BS16T2_UART3_Handler</a><BR>
 <LI><a href="#[20]">GP16C4T0_LCD_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">GP16C4T0_LCD_Handler</a><BR>
 <LI><a href="#[21]">BS16T3_DAC0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">BS16T3_DAC0_Handler</a><BR>
 <LI><a href="#[22]">I2C0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">I2C0_Handler</a><BR>
 <LI><a href="#[23]">I2C1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">I2C1_Handler</a><BR>
 <LI><a href="#[24]">SPI0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">SPI0_Handler</a><BR>
 <LI><a href="#[25]">SPI1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">SPI1_Handler</a><BR>
 <LI><a href="#[26]">UART0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">UART0_Handler</a><BR>
 <LI><a href="#[27]">UART1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">UART1_Handler</a><BR>
 <LI><a href="#[28]">USART0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">USART0_Handler</a><BR>
 <LI><a href="#[29]">USART1_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[29]">USART1_Handler</a><BR>
 <LI><a href="#[2a]">LPUART0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a]">LPUART0_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[19]">AD16C4T0_BRK_UP_TRIG_COM_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[1a]">AD16C4T0_CC_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[18]">ADC_ACMP_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[1b]">BS16T0_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[1e]">BS16T1_UART2_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[1f]">BS16T2_UART3_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[21]">BS16T3_DAC0_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[16]">CAN0_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[10]">CMU_Handler</a> from irq.o(i.CMU_Handler) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[f]">CRYPT_TRNG_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[15]">DMA_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from irq.o(i.DebugMon_Handler) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[11]">EXTI0_3_Handler</a> from irq.o(i.EXTI0_3_Handler) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[14]">EXTI12_15_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[12]">EXTI4_7_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[13]">EXTI8_11_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[1c]">GP16C2T0_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[1d]">GP16C2T1_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[20]">GP16C4T0_LCD_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from irq.o(i.HardFault_Handler) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[22]">I2C0_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[23]">I2C1_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[17]">LPTIM0_SPI2_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[2a]">LPUART0_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[d]">LVD_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from irq.o(i.NMI_Handler) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from irq.o(i.PendSV_Handler) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[e]">RTC_TSENSE_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[24]">SPI0_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[25]">SPI1_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from irq.o(i.SVC_Handler) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from bsp_timer.o(i.SysTick_Handler) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[26]">UART0_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[27]">UART1_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[28]">USART0_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[29]">USART1_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[c]">WWDG_IWDG_Handler</a> from startup_es32f065x.o(INT) referenced from startup_es32f065x.o(RESET)
 <LI><a href="#[2c]">__main</a> from __main.o(!!!main) referenced from startup_es32f065x.o(INT)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2c]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2d]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2f]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[61]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[62]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[30]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[63]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[34]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[64]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[65]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[66]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[67]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[68]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[69]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[6a]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[6b]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[6c]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[6d]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[6e]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[6f]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[70]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[71]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[72]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[73]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[74]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[75]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[76]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[77]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[78]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[39]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[79]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[7a]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[7b]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[7c]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[7d]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[7e]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[7f]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[2e]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[80]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[31]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[33]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[81]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[35]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; bsp_init &rArr; SystemClock_Config &rArr; ald_cmu_clock_config &rArr; cmu_clock_update &rArr; ald_tick_init &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[3f]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[38]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[83]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3a]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[84]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_tick_init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init_timer
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_cmu_clock_config
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[37]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[8a]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[8b]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[8c]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>WWDG_IWDG_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDG_IWDG_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WWDG_IWDG_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>LVD_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LVD_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LVD_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RTC_TSENSE_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TSENSE_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_TSENSE_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>CRYPT_TRNG_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRYPT_TRNG_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRYPT_TRNG_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI4_7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI8_11_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI8_11_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI8_11_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI12_15_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI12_15_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI12_15_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>CAN0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>LPTIM0_SPI2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM0_SPI2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTIM0_SPI2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>ADC_ACMP_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ACMP_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ACMP_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>AD16C4T0_BRK_UP_TRIG_COM_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD16C4T0_BRK_UP_TRIG_COM_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD16C4T0_BRK_UP_TRIG_COM_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>AD16C4T0_CC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD16C4T0_CC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD16C4T0_CC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>BS16T0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BS16T0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BS16T0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>GP16C2T0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GP16C2T0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GP16C2T0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>GP16C2T1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GP16C2T1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GP16C2T1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>BS16T1_UART2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BS16T1_UART2_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BS16T1_UART2_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>BS16T2_UART3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BS16T2_UART3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BS16T2_UART3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>GP16C4T0_LCD_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GP16C4T0_LCD_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GP16C4T0_LCD_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>BS16T3_DAC0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BS16T3_DAC0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BS16T3_DAC0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>I2C0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>I2C1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SPI0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>SPI1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>UART0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>UART1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>USART0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>USART1_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>LPUART0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_es32f065x.o(INT))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_es32f065x.o(INT))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[10]"></a>CMU_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, irq.o(i.CMU_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CMU_Handler &rArr; ald_cmu_irq_handler &rArr; cmu_clock_update &rArr; ald_tick_init &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_cmu_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, irq.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI0_3_Handler</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, irq.o(i.EXTI0_3_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI0_3_Handler &rArr; toggle_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_gpio_exti_get_flag_status
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_gpio_exti_clear_flag_status
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toggle_pin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, irq.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, irq.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, irq.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, irq.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_timer.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Handler &rArr; ald_inc_tick
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_inc_tick
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_es32f065x.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SysTick_ISR</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, bsp_timer.o(i.SysTick_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_ISR
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_softtimerdec
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_RunPer1ms
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_RunPer10ms
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[4d]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ald_cmu.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_cmu_clock_config
</UL>

<P><STRONG><a name="[4c]"></a>ald_cmu_clock_config</STRONG> (Thumb, 838 bytes, Stack size 16 bytes, ald_cmu.o(i.ald_cmu_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ald_cmu_clock_config &rArr; cmu_clock_update &rArr; ald_tick_init &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmu_clock_update
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[51]"></a>ald_cmu_clock_config_default</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, ald_cmu.o(i.ald_cmu_clock_config_default))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_cmu_init
</UL>

<P><STRONG><a name="[57]"></a>ald_cmu_get_sys_clock</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ald_cmu.o(i.ald_cmu_get_sys_clock))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_tick_init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init_timer
</UL>

<P><STRONG><a name="[50]"></a>ald_cmu_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, utils.o(i.ald_cmu_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ald_cmu_init &rArr; ald_tick_init &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_tick_init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_cmu_clock_config_default
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[53]"></a>ald_cmu_irq_cbk</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ald_cmu.o(i.ald_cmu_irq_cbk))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_cmu_irq_handler
</UL>

<P><STRONG><a name="[40]"></a>ald_cmu_irq_handler</STRONG> (Thumb, 472 bytes, Stack size 8 bytes, ald_cmu.o(i.ald_cmu_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ald_cmu_irq_handler &rArr; cmu_clock_update &rArr; ald_tick_init &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_cmu_irq_cbk
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmu_clock_update
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMU_Handler
</UL>

<P><STRONG><a name="[42]"></a>ald_gpio_exti_clear_flag_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ald_gpio.o(i.ald_gpio_exti_clear_flag_status))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_initkey
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_3_Handler
</UL>

<P><STRONG><a name="[41]"></a>ald_gpio_exti_get_flag_status</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ald_gpio.o(i.ald_gpio_exti_get_flag_status))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_3_Handler
</UL>

<P><STRONG><a name="[5e]"></a>ald_gpio_exti_init</STRONG> (Thumb, 286 bytes, Stack size 20 bytes, ald_gpio.o(i.ald_gpio_exti_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ald_gpio_exti_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_initkey
</UL>

<P><STRONG><a name="[5f]"></a>ald_gpio_exti_interrupt_config</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, ald_gpio.o(i.ald_gpio_exti_interrupt_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ald_gpio_exti_interrupt_config
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_initkey
</UL>

<P><STRONG><a name="[5d]"></a>ald_gpio_init</STRONG> (Thumb, 204 bytes, Stack size 20 bytes, ald_gpio.o(i.ald_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ald_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;out_gpio_init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_initkey
</UL>

<P><STRONG><a name="[60]"></a>ald_gpio_toggle_pin</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ald_gpio.o(i.ald_gpio_toggle_pin))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toggle_pin
</UL>

<P><STRONG><a name="[46]"></a>ald_inc_tick</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, utils.o(i.ald_inc_tick))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ald_inc_tick
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_systick_irq_cbk
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_inc_tick_weak
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[54]"></a>ald_inc_tick_weak</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, utils.o(i.ald_inc_tick_weak))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_inc_tick
</UL>

<P><STRONG><a name="[56]"></a>ald_mcu_irq_config</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, utils.o(i.ald_mcu_irq_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ald_mcu_irq_config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_initkey
</UL>

<P><STRONG><a name="[55]"></a>ald_systick_irq_cbk</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, utils.o(i.ald_systick_irq_cbk))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_inc_tick
</UL>

<P><STRONG><a name="[52]"></a>ald_tick_init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, utils.o(i.ald_tick_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ald_tick_init &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_cmu_get_sys_clock
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmu_clock_update
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_cmu_init
</UL>

<P><STRONG><a name="[4a]"></a>bsp_RunPer10ms</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bsp.o(i.bsp_RunPer10ms))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ISR
</UL>

<P><STRONG><a name="[49]"></a>bsp_RunPer1ms</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bsp.o(i.bsp_RunPer1ms))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ISR
</UL>

<P><STRONG><a name="[58]"></a>bsp_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp.o(i.bsp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = bsp_init &rArr; SystemClock_Config &rArr; ald_cmu_clock_config &rArr; cmu_clock_update &rArr; ald_tick_init &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;out_gpio_init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_initkey
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init_timer
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_cmu_init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>bsp_init_timer</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, bsp_timer.o(i.bsp_init_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bsp_init_timer &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_cmu_get_sys_clock
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[5a]"></a>bsp_initkey</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, bsp_key.o(i.bsp_initkey))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bsp_initkey &rArr; ald_mcu_irq_config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_mcu_irq_config
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_gpio_exti_interrupt_config
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_gpio_exti_init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_gpio_exti_clear_flag_status
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[36]"></a>main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main_1.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = main &rArr; bsp_init &rArr; SystemClock_Config &rArr; ald_cmu_clock_config &rArr; cmu_clock_update &rArr; ald_tick_init &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[59]"></a>out_gpio_init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, bsp_gpio.o(i.out_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = out_gpio_init &rArr; ald_gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[43]"></a>toggle_pin</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, bsp_gpio.o(i.toggle_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = toggle_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_gpio_toggle_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_3_Handler
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4b]"></a>SystemClock_Config</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SystemClock_Config &rArr; ald_cmu_clock_config &rArr; cmu_clock_update &rArr; ald_tick_init &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_cmu_clock_config
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[5c]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, bsp_timer.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init_timer
</UL>

<P><STRONG><a name="[48]"></a>bsp_softtimerdec</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, bsp_timer.o(i.bsp_softtimerdec))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ISR
</UL>

<P><STRONG><a name="[4e]"></a>cmu_clock_update</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ald_cmu.o(i.cmu_clock_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = cmu_clock_update &rArr; ald_tick_init &rArr; SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_tick_init
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_cmu_irq_handler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_cmu_clock_config
</UL>

<P><STRONG><a name="[44]"></a>SysTick_Config</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, utils.o(i.SysTick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_tick_init
</UL>

<P><STRONG><a name="[45]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, utils.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_tick_init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ald_mcu_irq_config
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[3e]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
